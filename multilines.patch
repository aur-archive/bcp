 all: bcps bcpc
diff -Naur bcp-20011229.orig/bcpc.c bcp-20011229/bcpc.c
--- bcpc.c.orig	2001-12-29 15:03:13.000000000 +0100
+++ bcpc.c	2009-04-15 17:58:00.000000000 +0200
@@ -80,23 +80,23 @@
 void
 print_help(void)
 {
- fprintf(stderr,"bcpc -- a Brutalcopy client half
-Brutalcopy (c) 2000 Karel Kulhavy, Clocksoft
-
-Brutalcopy is a program for transferring rather large files by means of UDP
-protocol in order to bypass TCP tendency to screw up on bad lines. Brutalcopy is
-based on manual flow control.
-
-Usage: bcpc -l <server hostname> -p <server port> [-h] [-i
-<filename>] [-s <payload_size>] [-r <sot_retransmit_time>] [-b <bytes_per_sec>]
-
--l <server>    DNS name or IP address (in dot notation) of the server.
--p <dist_port> Port must be some high number (>=1024). Default is 1235.
--h             Prints out help and ends.
--i <filename>  File to dump the received data from. Default is bcp.dat.
--s <payload>   Number of bytes as a data payload in a single packet.
--r <srt>       Number of microsecond after which is SOT retransmitted.
--b <Bps>      Bytes of payload per second
+ fprintf(stderr,"bcpc -- a Brutalcopy client half\n\
+Brutalcopy (c) 2000 Karel Kulhavy, Clocksoft\n\
+\n\
+Brutalcopy is a program for transferring rather large files by means of UDP\n\
+protocol in order to bypass TCP tendency to screw up on bad lines. Brutalcopy is\n\
+based on manual flow control.\n\
+\n\
+Usage: bcpc -l <server hostname> -p <server port> [-h] [-i\n\
+<filename>] [-s <payload_size>] [-r <sot_retransmit_time>] [-b <bytes_per_sec>]\n\
+\n\
+-l <server>    DNS name or IP address (in dot notation) of the server.\n\
+-p <dist_port> Port must be some high number (>=1024). Default is 1235.\n\
+-h             Prints out help and ends.\n\
+-i <filename>  File to dump the received data from. Default is bcp.dat.\n\
+-s <payload>   Number of bytes as a data payload in a single packet.\n\
+-r <srt>       Number of microsecond after which is SOT retransmitted.\n\
+-b <Bps>      Bytes of payload per second\n\
 ");
 }
 
@@ -289,7 +289,7 @@
 
  if (n>=n_packets)
  {
-  fprintf(stderr,"Invalid packet seq# of %u from %lu came! It means data are
+  fprintf(stderr,"Invalid packet seq# of %u from %lu came! It means data are\n\
 corrupted. Quitting immediately.\n",n,n_packets);
   die();
  } 
diff -Naur bcp-20011229.orig/bcps.c bcp-20011229/bcps.c
--- bcps.c.orig	2001-12-29 15:03:13.000000000 +0100
+++ bcps.c	2009-04-15 17:57:09.000000000 +0200
@@ -99,27 +99,27 @@
 void
 print_help(void)
 {
- fprintf(stderr,"bcps -- a Brutalcopy server half
-Brutalcopy (c) 2000 Karel Kulhavy, Clocksoft
-
-Brutalcopy is a program for transferring rather large files by means of UDP
-protocol in order to bypass TCP tendency to screw up on bad lines. Brutalcopy
-is based on manual flow control.
-
-Usage: bcps -p <number_of_port_to_listen on> [-h] [-o
-<filename>] [-s] [-e <number_of_eots>] [-r <eot_period>] [-1] [-2]
-[-q <info_retransmit_timeout>]
-
--p <port>      Port must be some high number. Default is 1235.
--h             Prints out help and ends.
--o <filename>  File to dump the received data to. Default is bcp.dat.
--s             Print tickers
--e <n_eots>    Number of EOT packets sent at the end. Default is 3.
--r <eot_p>     Time distance between consecutive EOT packets in microseconds.
-               Default is 100,000.
--q             Info packet retransmit timeout in usec.
--1             Do not print tickers
--2             Print nothing
+ fprintf(stderr,"bcps -- a Brutalcopy server half\n\
+Brutalcopy (c) 2000 Karel Kulhavy, Clocksoft\n\
+\n\
+Brutalcopy is a program for transferring rather large files by means of UDP\n\
+protocol in order to bypass TCP tendency to screw up on bad lines. Brutalcopy\n\
+is based on manual flow control.\n\
+\n\
+Usage: bcps -p <number_of_port_to_listen on> [-h] [-o\n\
+<filename>] [-s] [-e <number_of_eots>] [-r <eot_period>] [-1] [-2]\n\
+[-q <info_retransmit_timeout>]\n\
+\n\
+-p <port>      Port must be some high number. Default is 1235.\n\
+-h             Prints out help and ends.\n\
+-o <filename>  File to dump the received data to. Default is bcp.dat.\n\
+-s             Print tickers\n\
+-e <n_eots>    Number of EOT packets sent at the end. Default is 3.\n\
+-r <eot_p>     Time distance between consecutive EOT packets in microseconds.\n\
+               Default is 100,000.\n\
+-q             Info packet retransmit timeout in usec.\n\
+-1             Do not print tickers\n\
+-2             Print nothing\n\
 ");
 }
 
